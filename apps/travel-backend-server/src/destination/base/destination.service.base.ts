/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Destination as PrismaDestination } from "@prisma/client";

export class DestinationServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DestinationCountArgs, "select">
  ): Promise<number> {
    return this.prisma.destination.count(args);
  }

  async destinations<T extends Prisma.DestinationFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.DestinationFindManyArgs>
  ): Promise<PrismaDestination[]> {
    return this.prisma.destination.findMany<Prisma.DestinationFindManyArgs>(
      args
    );
  }
  async destination<T extends Prisma.DestinationFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.DestinationFindUniqueArgs>
  ): Promise<PrismaDestination | null> {
    return this.prisma.destination.findUnique(args);
  }
  async createDestination<T extends Prisma.DestinationCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DestinationCreateArgs>
  ): Promise<PrismaDestination> {
    return this.prisma.destination.create<T>(args);
  }
  async updateDestination<T extends Prisma.DestinationUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DestinationUpdateArgs>
  ): Promise<PrismaDestination> {
    return this.prisma.destination.update<T>(args);
  }
  async deleteDestination<T extends Prisma.DestinationDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.DestinationDeleteArgs>
  ): Promise<PrismaDestination> {
    return this.prisma.destination.delete(args);
  }
}
